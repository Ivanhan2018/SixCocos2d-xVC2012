class IBaseTableClient
{

public:
	IBaseTableClient(void);
	~IBaseTableClient(void);

public:

	virtual void OnConnect(bool bIsReconnect, sockaddr_in addrConnect)=0;
	virtual void OnConnectFail(bool bIsReconnect, int iError, sockaddr_in addrConnect)=0;
	virtual void OnCommError(char* pszError)=0;
	virtual void OnSend(int iMainCode, int iSubCode, const BYTE* pData, int iDataLen)=0;
	virtual void OnSendFailed(int iMainCode, int iSubCode, const BYTE* pData, int iDataLen)=0;
	virtual void OnClose(bool bClientClose)=0;
	/* --------------------------------------------------------------------------
	函数说明：响应收包消息
	传入参数：
		iMainCode	消息主码
		iSubCode	消息辅助码
		pData		包体数据
		iDataLen	包体数据的长度
	--------------------------------------------------------------------------*/
	virtual void OnTableMsg(int iMainCode, int iSubCode, const BYTE* pData, int iDataLen) = 0;

	int init(const CLIENT_ROOM_INFO& vRoomClientInfo, const CLIENT_FRAME_PARAM& vFrameParam);

	int start();
	
	int stop();

	// Add by Cool.Cat
	int send_data(int iMainCode, int iSubCode, void *pData, int iDataLen);
	int send_data(int iMainCode, int iSubCode);

	/* --------------------------------------------------------------------------
	函数说明：关闭服务端
	传入参数：
		bClientClose	TRUE表示客户端主动关闭，FALSE表示被服务端关闭的
	返回值：
		成功则返回 TRUE，否则返回 FALSE 。
	--------------------------------------------------------------------------*/
	bool close(bool bClientClose=false);

	/* --------------------------------------------------------------------------
	函数说明：登录房间
	传入参数：
		玩家ID
	返回值：
		成功则返回 0，失败返回错误码如下：
	--------------------------------------------------------------------------*/
	int login_room();

	// 离开房间
	int leave_room();

	// 入座
	int sit_down(int iTableNo, int iSeatNo);

	// 离座
	int leave_seat();

	// 申请房间内的用户列表
	int query_user_list();

	// 写分
	int write_score(const WRITE_SCORE& score);

public:

	// 踢一个玩家离座或离房
	int tick_one_leave_seat(int iTableNo, int iSeatNo);

	// 踢一桌玩家离座
	int tick_table_leave_seat(int iTableNo);

	// 踢所有在座的玩家离座
	int tick_all_leave_seat();

	// 踢玩家离房
	int tick_user_out_room(int iTableNo, int iSeatNo);

	// 踢一桌内所有的玩家离房
	int tick_user_out_room(int iTableNo);

	// 踢所有的玩家离房
	int tick_user_out_room();

	CLIENT_ROOM_INFO GetRoomInfo();
};